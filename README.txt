פרוייקט - LOAD RUNNER

אלישר פייג 302278338 (שם מלא: אלישר מאיר משה פייג)

*שינויים מאז הצגת הפרוייקט (ועד ההגשה הסופית) על פי ההערות:

א. בנוגע לאויב הרנדומלי כעת משנה כיוון לפי שעון ולא על כל סיבוב בלולאה
ב. בנוגע ליישור השחקן למרכז המוט בעת הליכה שמאלה וימינה, ובסולם בעת עלייה/ירידה, 
גם כן סידרתי.
ג. בנוסף, שיניתי את תנועת האויבים שהולכים שמאלה וימינה כך שאם הם מגיעים לקצה רצפה
הם משנים כיוון וכך לא נופלים (כי לרוב היו מתנקזים לי למטה)
ד. הוספתי עוד שלב (ישנם כעת 5 שלבים + 2 שלבי בונוס)
ה. עוד תיקונים קלים (כגון שהואבייקטים הנעים אינם יכולים לצאת מגבולות הלוח של השלב)

הסבר כללי:

בתרגיל היה עלינו לממש משחק בגרפיקת SFML על פי חוקי משחק : LOAD RUNNER
(על פי תרגיל 2 עם התוספות הנדרשות בפירוט הפרוייקט)
 
 במשחק מוצג לוח שעליו יהיו האלמנטים הבאים:
שחקן: @  
אויב: %
קיר: #
רצפה: F
מטבע: *
סולם: H 
מוט:  - 
מתנה טובה: +
מתנה רעה: X

תיאור המשחק:
השחקן מופעל על לחיצות על החיצים במקלדת ויכול לזוז ימינה, שמאלה, למעלה או למטה (למעלה 
רק אם יש סולם או מוט). האויבים יזזו בהתאם לאיזה סוג אויב הוא (יפורט בהמשך)
לשחקן גם אופציה לחפור בור מימינו ומשמאלו ברצפה
תזוזות חוקיות יפורט בהמשך וכן אכילת מטבע וכדומה יפורט במחלקות השונות

מטרת המשחק-
לאכול בכל שלב את כל המטבעות ולא להפסל ע"י התנגשות או ע"י סיום הזמן המוקצב לשלב

 תיכון (Desing):

המשחק מנוהל ע"י GameMangaer בשיתוף עם Board
המשחק מחולק למחלקות הבאות:

GameMangaer
Board
Image
Sounds
GameObject <|-- StaticObject
GameObject <|-- MovingObject
StaticObject <|-- ConstStaticObj
StaticObject <|-- VariableStaticObj
ConstStaticObj <|-- Ladder
ConstStaticObj <|-- Pole
ConstStaticObj <|-- Wall
VariableStaticObj <|-- Present
VariableStaticObj <|-- Floor
Present <|-- Coin
Present <|-- PresentGood
Present <|-- PresentBad
MovingObject <|-- Player
MovingObject <|-- Enemy
Enemy <|-- EnemyRandom
Enemy <|-- EnemySmart
Enemy <|-- EnemyBoring

Utilities.h

רשימת הקבצים שיצרתי ותכונותיהן:

GameMangaer.h/cpp
מנהל את המשחק מלמעלה ואת הצג המוצג לנו בחלון ע"י המחלקות האחרות. הוא אחראי לניהול
החלונות (חלון תפריט פתיחה, חלון המשחק, חלון תפריט מעבר בין שלבים, חלון הפסד (רק במקרה
של game over, וכן חלון ניצחון סופי)

Board.h/cpp 
מחלקת הלוח היא המחלקה אשר אחראית על פתיחת הקןבץ והחזקת הנתונים המתקבלים
מתוך הקובץ והחזקת האובייקטים בוקטורים מתאימים. הנתונים משתנים בהתאם למשחק
ומתעדכנים בבורד אשר מדבר עם שאר המחלקות ומעדכן את הGameManager במקרים
החריגים של מעבר שלב, הפסד, גודל הלוח החדש, המיקומים החדשים בכל סבב בלולאה (כי 
הגייםמאנאג'ר מצייר על הלוח) וכדומה..  

Image.h/cpp
מחלקת singleton .
אחראית על טעינת התמונות של המשחק ושמירתן בוקטור מתאים

Sounds.h/cpp
מחלקת singleton .
אחראית על טעינות של הצלילים למשחק ושמירתם בוקטור מתאים
בנוסף, קיימת לה פונקציה makeSound() אשר בקריאה מכל מקום בתוכנית
בשליחת קונסט מתאים מנגנת את הצליל הנדרש (נגיד בהתנגשות או בסיום שלב וכד')

GameObject.h/cpp 
מחלקה זו היא זו שמחזיקה את הנתונים של ה Sprite עבור כל אובייקט. ממנה יורשות StaticObject
וכן MovingObject

/// <סטטיים>

StaticObject.h/cpp
מייצגת את האובייקטים הסטטים במשחק.
ממחלקה זו יורשות ConstStaticObj וכן VariableStaticObj

ConstStaticObj.h/cpp
מחלקה זו מייצגת את האובייקטים הסטטיים שאינם ניתנים להעלמה/מחיקה ונשארים
כל השלב הנוכחי.
ממחלקה זו יורשות  : Wall, Ladder ו- Pole

Wall.h/cpp
מייצגת קיר במשחק. האובייקטים הנעים אינם יכולים לעבור דרכו

Ladder.h/cpp
מייצגת סולם במשחק. האובייקטים הזזים יכולים לעלות ולרדת בו

Pole.h/cpp
מייצגת מוט במשחק. האובייקטים הנעים יכולים לנוע עליו ימינה שמאלה

VariableStaticObj
מחלקה זו מייצגת את האובייקטים הסטטיים אשר ניתנים להעלמה/מחיקה/חפירה וכד'.
ממחלקה זו יורשות: מחלקת Present (אבסטרקטית), וכן מחלקת Floor

Present.h/cpp
מייצגת את המטבעות והמתנות.
ממנה יורשות: Coin, PresentGood, PresentBad

Floor.h/cpp
מייצגת אובייקט רצפה, עשויה להיעלם בעת חפירה לכמה שניות והאובייקטים הזזים יכולים
להכנס במעבר על ה"בור" (אם יש אובייקט בבור לאובייקט אחר לא תנתן אפשרות להכנס גם)

Coin.h/cpp
מייצגת מטבע, רק השחקן יכול ל"אכול" מטבע (במקרה זה המטבע יעלם (ימחק
מהוקטור)), ולקבל את הניקוד בהתאם

PresentGood.h/cpp
מייצגת מתנות טובות רק השחקן יכול לקבל מתנה (במקרה זה המתנה תעלם (תמחק
מהוקטור)), ולקבל את התוצאה רנדומלית (תוספת זמן אם יש לשלב זמן מוקצב, תוספת
ניקוד, הוספה של חיים)

PresentBad.h/cpp
מייצגת מתנה רעה --> הוספה של אויב חדש למשחק (מחיקה כמו מטבע ומתנה טובה)

/// <סטטיים סוף/>

/// <זזים>

Player.h/cpp
מחלקה זו מייצגת את השחקן ושומרת ומעדכנת את הנתונים אודות השחקן במשחק
 (אחראית על תזוזה,כיוון, מיקום, טיפול מתאים בהתנגשויות, ניקוד , חיים ועדכון על פסילה)

Enemy.h/cpp (אבסטרקטית)
מייצגת אויב כלשהו במשחק
ממחלקה זו יורשות : EnemySmart, EnemyRandom, EnemyBoring
מחזיקה גם מצביע לשחקן

EnemySmart.h/cpp
מחלקה זו מייצגת אויב חכם. אויב זה עוקב אחרי השחקן ומנסה להתנגש בו
(אחראית על תזוזה, כיוון , מיקום, טיפול מתאים בהתנגשויות)

EnemyBoring.h/cpp
מחלקה זו מייצגת אויב "משעמם". האויב הזה נע ימינה או שמאלה וכשאר נתקל בקיר 
או ברצפה (או בקצה הלוח), משנה כיוון.
(אחראית על תזוזה, כיוון , מיקום, טיפול מתאים בהתנגשויות)

EnemyRandom.h/cpp
מחלקה זו מייצגת אויב רנדומלי. האויב הזה נע רנדומלית לכיוונים שונים
(אחראית על תזוזה, כיוון , מיקום, טיפול מתאים בהתנגשויות)

/// <זזים סוף/>

מבני נתונים:

vector < string > m_charBoard
שמירה של השלב הנוכחי מבחינת charים

vector < shared_ptr < MovingObject >> m_movable
שומר את האובייקטים הנעים

vector < unique_ptr < StaticObject >> m_statics
שומר את האובייקטים הסטטיים

פורמט הקובץ:

Board.txt
מדובר בקובץ בודד, כל שלב מופרד מהשלב האחר בשורה ריקה. לא נדרשות פעולות 
בין כל שלב (שומר בכל שלב את המיקום הנוכחי של תחילת השלב למקרה של פסילה,
ובמקרה של ניצחון אוכל את השורה הריקה ומתקדם לייצוג של השלב הבא ושומר באותו
אופן את תחילת השלב הנוכחי וכך הלאה.)
סיום (ניצחון סופי) הוא כאשר מגיעים לקרוא 0, 0, 0 כלומר שגודל הלוח הוא 0 על 0 והזמן 
הוא 0 אזי מסמן ניצחון סופי של המשחק

תוספת: 
הוספתי 2 שלבי בונוס (הם לא יחשבו כשלבי המשחק אך ניתן לצבור בהם נקודות ומתנות)

אלגוריתמים הראויים לציון:
**********************************************************
אלגוריתם אויב חכם, אלגוריתם חפירה של הבור ונפילה אליו ויצאה ממנו, double dispatch
לטיפול בהתנגשויות, 
***********************************************************

תזוזות לא חוקיות:
השחקן והאויבים לא יכולים לעבור דרך קירות או רצפות (או גבולות הלוח)

באגים ידועים:
אין

שינויים מאז הצגת הפרוייקט:

בנוגע לאויב הרנדומלי כעת משנה כיוון לפי שעון ולא על כל סיבוב בלולאה
וכן, בנוגע ליישור השחקן למרכז המוט בעת הליכה שמאלה וימינה, ובסולם בעת עלייה/ירידה, 
גם כן סידרתי.
בנוסף, שיניתי את תנועת האויבים שהולכים שמאלה וימינה כך שאם הם מגיעים לקצה רצפה
הם משנים כיוון וכך לא נופלים (כי לרוב היו מתנקזים לי למטה)
וכן, הוספתי עוד שלב (ישנם כעת 5 שלבים + 2 שלבי בונוס)
ועוד תיקונים קלים (כגון שהואבייקטים הנעים אינם יכולים לצאת מגבולות הלוח של השלב)